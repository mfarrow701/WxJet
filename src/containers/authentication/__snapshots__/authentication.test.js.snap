// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Authentication container should render the authentication container after load 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Authentication />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Unknown>
        <img
                src="logo.svg"
        />
        <input
                onChange={[Function]}
                placeholder="Email"
                type="text"
        />
        <input
                onChange={[Function]}
                placeholder="Password"
                type="password"
        />
        <button
                onClick={[Function]}
        >
                Sign in
        </button>
        <p>
                Not registered?
        </p>
</Unknown>,
      "className": "Authentication",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <img
            src="logo.svg"
/>,
          <input
            onChange={[Function]}
            placeholder="Email"
            type="text"
/>,
          <input
            onChange={[Function]}
            placeholder="Password"
            type="password"
/>,
          <button
            onClick={[Function]}
>
            Sign in
</button>,
          <p>
            Not registered?
</p>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "src": "logo.svg",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "onChange": [Function],
            "placeholder": "Email",
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "onChange": [Function],
            "placeholder": "Password",
            "type": "password",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Sign in",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Sign in",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Not registered?",
          },
          "ref": null,
          "rendered": "Not registered?",
          "type": "p",
        },
      ],
      "type": Symbol(react.fragment),
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Unknown>
          <img
                    src="logo.svg"
          />
          <input
                    onChange={[Function]}
                    placeholder="Email"
                    type="text"
          />
          <input
                    onChange={[Function]}
                    placeholder="Password"
                    type="password"
          />
          <button
                    onClick={[Function]}
          >
                    Sign in
          </button>
          <p>
                    Not registered?
          </p>
</Unknown>,
        "className": "Authentication",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <img
              src="logo.svg"
/>,
            <input
              onChange={[Function]}
              placeholder="Email"
              type="text"
/>,
            <input
              onChange={[Function]}
              placeholder="Password"
              type="password"
/>,
            <button
              onClick={[Function]}
>
              Sign in
</button>,
            <p>
              Not registered?
</p>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "src": "logo.svg",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "onChange": [Function],
              "placeholder": "Email",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "onChange": [Function],
              "placeholder": "Password",
              "type": "password",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Sign in",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Sign in",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Not registered?",
            },
            "ref": null,
            "rendered": "Not registered?",
            "type": "p",
          },
        ],
        "type": Symbol(react.fragment),
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
